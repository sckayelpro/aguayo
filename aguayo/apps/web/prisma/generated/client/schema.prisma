generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  authUserId   String   @unique
  role         Role     @default(CLIENT)
  gallery      String[]
  email        String   @unique
  fullName     String?
  phoneNumber  String?
  profileImage String?
  location     String?
  bio          String?

  idFront   String?
  idBack    String?
  birthDate DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones con servicios
  servicesOffered   Service[] @relation("services_offered")
  servicesRequested Service[] @relation("services_requested")

  // Relación con bookings
  bookings Booking[]

  // (por ahora no usamos reviews para evitar errores)
}

model Service {
  id          String  @id @default(cuid())
  title       String
  description String
  price       Float
  category    String
  imageUrl    String?
  location    String?

  // Proveedor (quien ofrece el servicio)
  providerId String
  provider   User   @relation("services_offered", fields: [providerId], references: [id])

  // Cliente (quien solicita el servicio)
  requesterId String
  requester   User   @relation("services_requested", fields: [requesterId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relación con bookings
  bookings Booking[]
}

model Booking {
  id        String   @id @default(cuid())
  serviceId String
  userId    String
  date      DateTime
  status    String // Ej: pending, confirmed, canceled

  service Service @relation(fields: [serviceId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}

enum Role {
  CLIENT
  PROVIDER
}
